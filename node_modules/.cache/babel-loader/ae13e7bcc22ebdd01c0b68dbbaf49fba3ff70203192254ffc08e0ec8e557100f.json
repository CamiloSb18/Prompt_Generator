{"ast":null,"code":"var _jsxFileName = \"/Users/kushki/Downloads/PromptGenerator/src/components/HistoryForm.js\",\n  _s = $RefreshSig$();\n// HistoryForm.js\nimport React, { useState } from 'react';\nimport FormSection from './FormSection';\nimport AcceptanceCriteriaInput from './AcceptanceCriteriaInput';\n\n// Asumo que onGenerate y onClearPrompt se pasan como props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoryForm = ({\n  onGenerate,\n  onClearPrompt\n}) => {\n  _s();\n  const [epicId, setEpicId] = useState('');\n  const [storyLinks, setStoryLinks] = useState('');\n  const [selectedIA, setSelectedIA] = useState('');\n  const [selectedEnvironment, setSelectedEnvironment] = useState('');\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [acceptanceCriteria, setAcceptanceCriteria] = useState('');\n  const [rawCriteria, setRawCriteria] = useState('');\n  const [subTasks, setSubTasks] = useState(['']);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // ... (tu lógica de generación de prompt) ...\n    const prompt = `Escribir casos de prueba funcionales y no funcionales de la siguiente historia de usuario. Por favor generar los casos con epic id, Story Linkages, nombre de caso, precondición y formato dado que, cuando y entonces. organiza los casos en una tabla de la siguiente manera:\n\nEpic Id: \"${epicId || 'capturar previamente el epic id'}\"\nStory Linkages: \"${storyLinks || 'capturar previamente el story linkages'}\"\ncolumna caso: nombre del caso de prueba\ncolumna sumary: (Epic Id - Story Linkages - Caso)\ncolumna precondition: la precondición\ncolumna priority: MEDIUM para todos los casos\ncolumna status: TO DO para todos los casos\ncolumna Step Summary: el DADO QUE\ncolumna Test Data: el CUANDO\ncolumna Expected Result: el ENTONCES\ncolumna Labels: IA_${selectedIA},${selectedEnvironment},IA \n\n${name ? `Nombre: ${name}` : ''}\n\n${description ? `Descripción: ${description}` : ''}\n\n${acceptanceCriteria ? `Criterios de aceptación:\\n${acceptanceCriteria}` : ''}\n\n${subTasks.filter(task => task.trim() !== '').length > 0 ? `Sub tareas:\\n${subTasks.filter(task => task.trim() !== '').join('\\n')}` : ''}`;\n    onGenerate(prompt, {\n      name,\n      epicId,\n      storyLinks,\n      selectedIA,\n      selectedEnvironment\n    });\n  };\n  const handleClearForm = () => {\n    setName('');\n    setDescription('');\n    setAcceptanceCriteria('');\n    setRawCriteria('');\n    setSubTasks(['']);\n    setEpicId('');\n    setStoryLinks('');\n    setSelectedIA('');\n    setSelectedEnvironment('');\n\n    // ¡Aquí llamamos a la función para limpiar el prompt generado!\n    if (onClearPrompt) {\n      onClearPrompt();\n    }\n  };\n  const updateSubTasks = (newValue, index, isDelete) => {\n    const newSubTasks = [...subTasks];\n    if (isDelete && index >= 0) {\n      newSubTasks.splice(index, 1);\n    } else if (index === -1) {\n      newSubTasks.push(newValue);\n    } else {\n      newSubTasks[index] = newValue;\n    }\n    setSubTasks(newSubTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"bg-white rounded-lg shadow-sm p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 grid grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClearForm,\n        className: \"bg-emerald-500 text-white py-3 px-4 rounded-md font-medium hover:bg-emerald-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\",\n        children: \"Limpiar formulario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !name,\n        className: `py-3 px-4 rounded-md text-white font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 ${!name ? 'bg-gray-400 cursor-not-allowed' : 'bg-emerald-500 hover:bg-emerald-600 focus:ring-emerald-500'}`,\n        children: \"Generar prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoryForm, \"bvuESvi5g0uuK6ZB+7LpkAvd2lo=\");\n_c = HistoryForm;\nexport default HistoryForm;\nvar _c;\n$RefreshReg$(_c, \"HistoryForm\");","map":{"version":3,"names":["React","useState","FormSection","AcceptanceCriteriaInput","jsxDEV","_jsxDEV","HistoryForm","onGenerate","onClearPrompt","_s","epicId","setEpicId","storyLinks","setStoryLinks","selectedIA","setSelectedIA","selectedEnvironment","setSelectedEnvironment","name","setName","description","setDescription","acceptanceCriteria","setAcceptanceCriteria","rawCriteria","setRawCriteria","subTasks","setSubTasks","handleSubmit","e","preventDefault","prompt","filter","task","trim","length","join","handleClearForm","updateSubTasks","newValue","index","isDelete","newSubTasks","splice","push","onSubmit","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/Users/kushki/Downloads/PromptGenerator/src/components/HistoryForm.js"],"sourcesContent":["// HistoryForm.js\nimport React, { useState } from 'react';\nimport FormSection from './FormSection';\nimport AcceptanceCriteriaInput from './AcceptanceCriteriaInput';\n\n// Asumo que onGenerate y onClearPrompt se pasan como props\nconst HistoryForm = ({ onGenerate, onClearPrompt }) => { \n  const [epicId, setEpicId] = useState('');\n  const [storyLinks, setStoryLinks] = useState('');\n  const [selectedIA, setSelectedIA] = useState('');\n  const [selectedEnvironment, setSelectedEnvironment] = useState('');\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [acceptanceCriteria, setAcceptanceCriteria] = useState('');\n  const [rawCriteria, setRawCriteria] = useState('');\n  const [subTasks, setSubTasks] = useState(['']);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    // ... (tu lógica de generación de prompt) ...\n    const prompt = `Escribir casos de prueba funcionales y no funcionales de la siguiente historia de usuario. Por favor generar los casos con epic id, Story Linkages, nombre de caso, precondición y formato dado que, cuando y entonces. organiza los casos en una tabla de la siguiente manera:\n\nEpic Id: \"${epicId || 'capturar previamente el epic id'}\"\nStory Linkages: \"${storyLinks || 'capturar previamente el story linkages'}\"\ncolumna caso: nombre del caso de prueba\ncolumna sumary: (Epic Id - Story Linkages - Caso)\ncolumna precondition: la precondición\ncolumna priority: MEDIUM para todos los casos\ncolumna status: TO DO para todos los casos\ncolumna Step Summary: el DADO QUE\ncolumna Test Data: el CUANDO\ncolumna Expected Result: el ENTONCES\ncolumna Labels: IA_${selectedIA},${selectedEnvironment},IA \n\n${name ? `Nombre: ${name}` : ''}\n\n${description ? `Descripción: ${description}` : ''}\n\n${acceptanceCriteria ? `Criterios de aceptación:\\n${acceptanceCriteria}` : ''}\n\n${\n  subTasks.filter(task => task.trim() !== '').length > 0 \n    ? `Sub tareas:\\n${subTasks.filter(task => task.trim() !== '').join('\\n')}` \n    : ''\n}`;\n\n    onGenerate(prompt, { name, epicId, storyLinks, selectedIA, selectedEnvironment });\n  };\n\n  const handleClearForm = () => {\n    setName('');\n    setDescription('');\n    setAcceptanceCriteria('');\n    setRawCriteria('');\n    setSubTasks(['']);\n    setEpicId('');\n    setStoryLinks('');\n    setSelectedIA('');\n    setSelectedEnvironment('');\n\n    // ¡Aquí llamamos a la función para limpiar el prompt generado!\n    if (onClearPrompt) {\n      onClearPrompt(); \n    }\n  };\n\n  const updateSubTasks = (newValue, index, isDelete) => {\n    const newSubTasks = [...subTasks];\n    if (isDelete && index >= 0) {\n      newSubTasks.splice(index, 1);\n    } else if (index === -1) {\n      newSubTasks.push(newValue);\n    } else {\n      newSubTasks[index] = newValue;\n    }\n    setSubTasks(newSubTasks);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"bg-white rounded-lg shadow-sm p-6\">\n      {/* ... (el resto de tu formulario) ... */}\n\n      <div className=\"mt-6 grid grid-cols-2 gap-4\">\n        <button\n          type=\"button\"\n          onClick={handleClearForm}\n          className=\"bg-emerald-500 text-white py-3 px-4 rounded-md font-medium hover:bg-emerald-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\n        >\n          Limpiar formulario\n        </button>\n        <button\n          type=\"submit\"\n          disabled={!name}\n          className={`py-3 px-4 rounded-md text-white font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 ${\n            !name ? 'bg-gray-400 cursor-not-allowed' : 'bg-emerald-500 hover:bg-emerald-600 focus:ring-emerald-500'\n          }`}\n        >\n          Generar prompt\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default HistoryForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}